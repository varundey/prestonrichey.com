{"version":3,"sources":["webpack:///./src/components/TalkListing.js","webpack:///./src/pages/talks.js"],"names":["StyledBlogListing","styled","ul","StyledBlogItem","li","TalkListing","talkLinks","talks","map","talk","key","node","fields","slug","to","frontmatter","title","venue","TalksPageInner","props","data","allMdx","edges","e","query","TalksPage","Layout"],"mappings":"uMAIMA,EAAoBC,UAAOC,GAAV,oFAAGD,CAAH,sBAIjBE,EAAiBF,UAAOG,GAAV,iFAAGH,CAAH,2CAgBLI,EAZK,SAAC,GAAe,IAC5BC,EAD2B,EAAZC,MACGC,KAAI,SAAAC,GAAI,OAC9B,kBAACN,EAAD,CAAgBO,IAAKD,EAAKE,KAAKC,OAAOC,MACpC,kBAAC,IAAD,CAAMC,GAAIL,EAAKE,KAAKC,OAAOC,MACxBJ,EAAKE,KAAKI,YAAYC,OAF3B,MAISP,EAAKE,KAAKI,YAAYE,UAGjC,OAAO,kBAACjB,EAAD,KAAoBM,IChBvBY,EAAiB,SAAAC,GACrB,IACE,IAAMZ,EAAQY,EAAMC,KAAKC,OAASF,EAAMC,KAAKC,OAAOC,MAAQ,GAC5D,OAAO,kBAAC,EAAD,CAAaf,MAAOA,IAC3B,MAAOgB,GACP,OAAO,2DAYEC,GAFEC,UANG,SAAAN,GAAK,OACrB,kBAACO,EAAA,EAAD,KACE,kBAAC,EAAmBP,KAMN","file":"component---src-pages-talks-js-b40829c708dd2b5f44d5.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst StyledBlogListing = styled.ul`\n  list-style: none;\n`;\n\nconst StyledBlogItem = styled.li`\n  font-size: 1.8rem;\n  margin-bottom: 0.5em;\n`;\nconst TalkListing = ({ talks }) => {\n  const talkLinks = talks.map(talk => (\n    <StyledBlogItem key={talk.node.fields.slug}>\n      <Link to={talk.node.fields.slug}>\n        {talk.node.frontmatter.title}\n      </Link>\n      {` @ ${talk.node.frontmatter.venue}`}\n    </StyledBlogItem>\n  ));\n  return <StyledBlogListing>{talkLinks}</StyledBlogListing>;\n};\n\nexport default TalkListing;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport Layout from './../components/Layout';\nimport TalkListing from '../components/TalkListing';\n\nconst TalksPageInner = props => {\n  try {\n    const talks = props.data.allMdx ? props.data.allMdx.edges : [];\n    return <TalkListing talks={talks}/>\n  } catch (e) {\n    return <h2>Unable to find any talks!</h2>\n  }\n};\n\nconst TalksPage = props => (\n  <Layout>\n    <TalksPageInner {...props}/>\n  </Layout>\n);\n\nexport default TalksPage;\n\nexport const query = graphql`\nquery {\n  allMdx(filter: {\n    frontmatter: {\n      publish: {\n        eq: true\n      }\n    },\n    fields: {\n      type: {\n        eq: \"talks\"\n      }\n    }\n  },\n    sort: {\n      fields:\n        [frontmatter___date],\n        order: DESC\n    }\n  ) {\n    edges {\n      node {\n        frontmatter {\n          title\n          _PARENT\n          layout\n          author\n          publish\n          date\n          excerpt\n          lede\n          link\n          repo\n          venue\n        }\n        fields {\n          slug\n          type\n        }\n      }\n    }\n  }\n}\n`;\n"],"sourceRoot":""}